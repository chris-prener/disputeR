% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dis_null.R
\name{dis_null}
\alias{dis_null}
\title{Validate Whether Parameter is Null}
\usage{
dis_null(x, class, null_valid, param = rlang::caller_arg(x),
    call = rlang::caller_env())
}
\arguments{
\item{x}{Required object; a parameter argument to test.}

\item{class}{Required character scalar; the expected type of the parameter.}

\item{null_valid}{Required logical scalar; whether the parameter can be \code{NULL}.
If \code{FALSE}, the function will throw an error if \code{x}
is \code{NULL}. If \code{TRUE}, the function will not throw an error if
\code{x} is \code{NULL}.}

\item{param}{Required character scalar; the parameter name. The default uses
\code{rlang::caller_arg(x)} to pull the parameter name passed to \code{x}
by the function \code{dis_null()} is nested within. This value can also
be set to a static character scalar.}

\item{call}{Required environment; the environment in which the function was called.
If nesting \code{dis_not_missing} within another function, it is recommended to
provide the calling environment to ensure the correct environment is referenced
using \code{rlang::caller_env()} (default). If there are multiple levels of
nesting, the \code{call} argument can be used to pass an environment created
in the outermost function.}
}
\value{
This function will return an error message for \code{NULL} parameters
    that are not allowed to be \code{NULL}. Otherwise, no output is returned.
}
\description{
This function returns a standard error message for \code{NULL}
    parameters that are not allowed to be \code{NULL}, i.e. if
    \code{null_valid = FALSE}.
}
\details{
See the vignette on \code{vignette("developing", package = "disputeR")}
    for details about internal validation of arguments for this function. Unlike
    the core functions, \code{dis_param} does not have a \code{fact_check}
    argument. The \code{vignette("developing", package = "disputeR")} vignette
    includes details on how to implement that functionality around \code{dis_param}.
}
