% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dis_msg.R
\name{dis_msg_class}
\alias{dis_msg_class}
\title{Default Message for Parameters of Incorrect Class}
\usage{
dis_msg_class(x, class, type, stem, param = "param", call = rlang::caller_env())
}
\arguments{
\item{x}{Required object; a parameter argument to test.}

\item{class}{Required character scalar; the expected class of an object.}

\item{type}{Required character scalar; one of either \code{"scalar"},
\code{"vector"}, or \code{"object"}.}

\item{stem}{Required character scalar; the end of the error message containing
an example of how to correctly format the input. For example, if you require
a numeric scalar, you should include \code{stem = "{.code {param} = 1}."}.
See the documentation for the \code{cli} package to find other formatting
examples.}

\item{param}{Required character scalar; the parameter name. The default
matches the argument named for environments used through \code{disputeR}.}

\item{call}{Required environment; the environment in which the function was called.
If nesting \code{dis_msg_class()} within another function, it is recommended to
provide the calling environment to ensure the correct environment is referenced
using \code{rlang::caller_env()} (default). If there are multiple levels of
nesting, the \code{call} argument can be used to pass an environment created
in the outermost function.}
}
\value{
A character string with the default message.
}
\description{
Create the default message used when a parameter is found to
    be the wrong class.
}
\details{
See the vignette on \code{vignette("performance", package = "disputeR")}
    for details about how to skip internal validation of arguments for this
    function.
}
\examples{
dis_msg_class(x = "test", class = "integer", type = "scalar",
              stem = "{.code {param} = 1}")

}
