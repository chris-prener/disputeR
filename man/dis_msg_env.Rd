% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dis_msg.R
\name{dis_msg_env}
\alias{dis_msg_env}
\title{Default Message for Environments}
\usage{
dis_msg_env(x, param = "call", call = rlang::caller_env())
}
\arguments{
\item{x}{Required object; a parameter argument to test.}

\item{param}{Required character scalar; the parameter name. The default
matches the argument named for environments used through \code{disputeR}.}

\item{call}{Required environment; the environment in which the function was called.
If nesting \code{dis_msg_class()} within another function, it is recommended to
provide the calling environment to ensure the correct environment is referenced
using \code{rlang::caller_env()} (default). If there are multiple levels of
nesting, the \code{call} argument can be used to pass an environment created
in the outermost function.}
}
\value{
A character string with the default message.
}
\description{
Create the default message used when an object passed to an
    environment parameter does not have the correct class.
}
\details{
See the vignette on \code{vignette("developing", package = "disputeR")}
    for details about internal validation of arguments for this function. Unlike
    the core functions, \code{dis_param} does not have a \code{fact_check}
    argument. The \code{vignette("developing", package = "disputeR")} vignette
    includes details on how to implement that functionality around \code{dis_param}.
}
\examples{
dis_msg_env(x = "character", param = "call")

}
